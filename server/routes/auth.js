const express = require('express');
const router = express.Router();
const AuthController = require('../controllers/authController');
const { authenticate } = require('../middleware/auth');
const { authValidation } = require('../middleware/validation');
const { uploadAvatars, uploadAvatar, handleUploadError } = require('../middleware/upload');
const config = require('../config/config');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ middleware –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞
const getAvatarUploadMiddleware = () => {
  if (config.nodeEnv === 'production' && process.env.CLOUDINARY_CLOUD_NAME) {
    console.log('üå•Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º Cloudinary –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤');
    return uploadAvatar.single('avatar');
  } else {
    console.log('üíæ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤');
    return uploadAvatars.single('avatar');
  }
};

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
router.post('/register', authValidation.register, AuthController.register);

// –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
router.post('/login', authValidation.login, AuthController.login);

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email
router.get('/verify-email/:token', AuthController.verifyEmail);

// –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è
router.post('/forgot-password', authValidation.forgotPassword, AuthController.forgotPassword);

// –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è
router.post('/reset-password', authValidation.resetPassword, AuthController.resetPassword);

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
router.get('/me', authenticate, AuthController.getCurrentUser);

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
router.put(
  '/profile',
  authenticate,
  authValidation.updateProfile,
  AuthController.updateProfile
);

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
router.put(
  '/change-password',
  authenticate,
  authValidation.changePassword,
  AuthController.changePassword
);

// –ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤–∞—Ç–∞—Ä–∞
router.post(
  '/upload-avatar',
  authenticate,
  uploadAvatars.single('avatar'), // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–ø—Ä—è–º—É—é uploadAvatars –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
  handleUploadError,
  AuthController.uploadAvatar
);

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
router.get('/stats', authenticate, AuthController.getUserStats);

module.exports = router; 